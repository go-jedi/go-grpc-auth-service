name: Release

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint files
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.5'
          check-latest: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
  test:
    name: Run tests
    runs-on: 'ubuntu-latest'
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.5'
          check-latest: true
      - run: go test -v -cover ./...
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    needs: test
    strategy:
      matrix:
        goosarch:
          - 'linux/amd64'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.5'
          check-latest: true
      - name: Get OS and arch info
        run: |
          BINARY_NAME=${{github.repository}}
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          CGO_ENABLED=0 go build -trimpath -ldflags="-s -w" -buildvcs=false cmd/app/main.go
      - name: Create ZIP folder
        run: |
          mkdir release
          cp main release/
          cp docker-compose.yaml release/
          cp config.yaml release/
          zip -r grpc_auth_service.zip release
      - name: Release with Notes
        uses: softprops/action-gh-release@v2
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: false
          files: grpc_auth_service.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}